{"meta":{"title":"Statham-Li的Blog","subtitle":null,"description":null,"author":"Statham-Li","url":"http://yoursite.com"},"pages":[{"title":"关于我","date":"2018-06-04T05:12:24.000Z","updated":"2018-06-05T06:05:36.751Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"一个来自辽宁的程序媛。 2015级黑龙江大学，信息管理与信息系统专业1班 爱好运动/音乐/旅行/coding…… 外表糙汉，内心细腻"}],"posts":[{"title":"网络协议(1)","slug":"网络协议-1","date":"2018-06-09T06:40:34.000Z","updated":"2018-06-09T08:21:15.276Z","comments":true,"path":"2018/06/09/网络协议-1/","link":"","permalink":"http://yoursite.com/2018/06/09/网络协议-1/","excerpt":"","text":"最近阅读了几篇不错的文章，谈一谈自己的感想，仅代表个人观点，若有不对的地方，欢迎各位指正 首先抛出一个问题，网络协议是什么？ 我们都知道，计算机很聪明，聪明到知道海量的知识，但同时它又很笨，笨到只认识0和1，我们人类要想与计算机沟通，需要一段文字把我们与计算机紧密结合起来，这段文字就是一种协议，只有通过这种协议，计算机才知道我们想让它做什么 1.协议三要素 1.语法，就是这一段内容要符合一定的规则和格式。例如，括号要成对，结束要使用分号等。2.语义，就是这一段内容要代表某种意义。例如数字减去数字是有意义的，数字减去文本一般来说就没有意义。3.顺序，就是先干啥，后干啥。例如，可以先加上某个数值，然后再减去某个数值 当然了，只有一台电脑是完全不能满足我们平时的网络活动的，这时就需要一大片机器协同完成一件事，而只其中必不可缺的一项就是网络协议 2.简述网络协议 文章中用了一个购物网站下单的例子来展开，我们也就借花献佛，以此来引出我们的主题 当我们想要购买一件商品的时候，一般都会打开浏览器，输入购物地址，紧接着，浏览器就给你返回了一个绚丽多彩的页面了。那么问题来了，，，你有没有考虑过浏览器是怎样实现这一过程的呢？ 首先在浏览器中输入https://www.xxx.com ，这是一个url，浏览器会通过地址簿协议DNS或者HTTPDNS去查找，无论用哪种方式查找，最终会得到一个地址，比如我们黑龙江大学校园网125.223.1.123，这是一个IP地址，就像是我们家里的门牌号。 知道了目标地址之后，浏览器将请求打包，对于普通的网络请求，会使用HTTP协议，如果是购物，那么它涉及到你个人的私密信息，所以一般用HTTPS协议加密传输，说到这里，我们提到的DNS，HTTP，HTTPS协议都已经开始发挥了作用，他们所发挥作用的这一层是我们网络模型的第一层——应用层 经过了应用层的封装，浏览器将应用层的包发送给下一层去完成，接下来的一层叫做传输层，有两种协议，①无连接的UDP协议②面向连接的TCP协议，无连接的意思是，我只负责把上一层的包发出去，至于发送成没成功我就不管了。而面向连接的意思是，包一旦发出我会看着它，一遍没发送成功，我就继续发送，直到发送成功为止（ps:TCP协议不会引起多次请求，不管TCP发送多少次都发生在一次请求过程之内） TCP协议中有两个端口，一个是浏览器监听的端口，一个是目标服务器的端口，当传输层封装完毕后，浏览器会将包发送到下一层，即网络层。网络层的协议是IP协议，IP协议中会有两个IP地址，即浏览器所在主机的IP地址和目标服务器所在主机的IP地址。这个时候可以说已经获取了明确的地址了。 这个时候，问题又来了，我们知道门牌号了，我们怎么去嘞？？？ 这个时候操作系统要进行判断了，如果这个地址在本地，那么好，直接靠吼，一吼“谁是125.223.1.123啊？”，黑大网关回应：“我再这旮沓呢！！！”，这一吼，调用了ARP协议。如果这个地址不在本地可咋整呢？就好比我有一个朋友，家在美国，那我想从中国要去他家，我必须得通过美国海关对吧。网络也是一样，到外地去，也要通过各种关卡，这种关卡就是网关，网关所拥有的mac地址是独一无二的。这个时候操作系统就把IP包交给下一层了，也就是mac层。网关收到包之后，会根据路由表判断下一步往哪里走，每一个网关都像是唐僧西天取经路上的一个国家，每一个国家是一片局域网，出了这片局域网，就得使用IP头来进行确认下一步要往哪走，知道走到最后一个城关，在本地一吼，找到对应的mac地址，网络包过了这道城关，最终找到目标服务器。 目标服务器发现，mac地址对上了，取下mac头发送回网络层，网络层发现IP也对上号了，取下IP头，IP头中会封装TCP协议，然后传给传输层，传输层中会收到前面几层收到包的回复，这些回复也会原路返回报个平安。最终回到应用层把携带的html/css页面展现到浏览器上。","categories":[],"tags":[{"name":"网络协议","slug":"网络协议","permalink":"http://yoursite.com/tags/网络协议/"}]},{"title":"JS函数","slug":"JS函数","date":"2018-06-07T05:28:19.000Z","updated":"2018-06-07T06:02:52.902Z","comments":true,"path":"2018/06/07/JS函数/","link":"","permalink":"http://yoursite.com/2018/06/07/JS函数/","excerpt":"","text":"1.匿名函数：不能单独写在页面内作用：赋值，传参(匿名函数可作为参数) 2.有名函数:在function后加名字(1)可加括号自执行(2)可把名字直接放在事件位置 例： 1234function a()&#123; alert(666); &#125; document.onclick = a; 回顾：数据类型：num String boolean null undefined objecttypeof:把null归为object,增加function函数表达式和函数定义的区别：函数表达式可直接加括号自执行；123例：var a = function()&#123; alert(1); &#125;();//可执行 将匿名函数强转为函数表达式的方法：在前面加 位操作符(~ + - !)或(function(){……});函数参数：1.形参2.实参ps:实参多于形参时，多出部分相当于没有，实参少于形参时，未接收到数据的形参为undefined 关于null和undefinednull指向一个空的对象地址，因此typeof将null归为object 123456if(null==undefined)&#123; alert(1); &#125; else&#123; alert(0); &#125;//弹出1，在逻辑运算中null和undefined相等，但不全等，原因就是他们是两种不同的数据类型 undefined 不报错 声明但未定义is not defined 报错，未声明 3.不定参:arguments代表不定参数的集合12345678例：function fn()&#123; var sum=0; for (var i = 0; i &lt; arguments.length; i++) &#123; sum+=arguments[i] &#125; alert(sum); &#125; fn(1,2,3,4,5);//弹出15 JS代码解析：第一步，解析定义，包括变量定义和函数定义，普通变量重名，后者覆盖前者。但若定义函数名和普通变量重名，函数优先级大于普通变量(var)第二步，解析执行，除定义之外的部分，包括赋值，运算等等123function A()&#123; alert(0);&#125;//从上至下，先看定义，定义了函数A，再执行，执行后弹出0 1var a = 10; //从上至下，先看定义，此时a=10,再看执行，由于alert括号内重新声明了a,所以此时a变为undefined。但若把下面的var去掉，由于少了var这一环节，所以程序报错","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-06-05T05:19:37.036Z","updated":"2018-06-07T04:21:10.202Z","comments":true,"path":"2018/06/05/hello-world/","link":"","permalink":"http://yoursite.com/2018/06/05/hello-world/","excerpt":"","text":"这个博客用来记录我个人的学习和生活，欢迎各位指点交流！","categories":[],"tags":[]}]}